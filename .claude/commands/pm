#!/usr/bin/env node

/**
 * ClaudeAutoPM PM Command
 * Main entry point for self-maintenance commands
 * Refactored to use Node.js instead of bash scripts
 */

const path = require('path');
const SelfMaintenance = require('../../scripts/self-maintenance.js');

async function main() {
  const command = process.argv[2];
  const maintenance = new SelfMaintenance();

  if (!command) {
    console.log('ü§ñ ClaudeAutoPM Self-Maintenance System');
    console.log('');
    console.log('Available commands:');
    console.log('  pm validate      - Validate project integrity');
    console.log('  pm optimize      - Analyze optimization opportunities');
    console.log('  pm test-install  - Test installation scenarios');
    console.log('  pm health        - Generate health report');
    console.log('  pm release       - Prepare new release');
    console.log('');
    console.log('Usage: pm <command> [options]');
    process.exit(0);
  }

  try {
    switch (command) {
      case 'validate':
        await maintenance.runValidation();
        break;

      case 'optimize':
        await maintenance.runOptimization();
        break;

      case 'test-install':
        await maintenance.runTestInstall();
        break;

      case 'health':
        await maintenance.runHealthCheck();
        break;

      case 'release':
        await maintenance.runRelease();
        break;

      default:
        console.error(`Unknown command: ${command}`);
        console.log("Run 'pm' without arguments to see available commands");
        process.exit(1);
    }
  } catch (error) {
    console.error(`‚ùå Command failed: ${error.message}`);
    process.exit(1);
  }
}

// Run the main function
main().catch(error => {
  console.error(`‚ùå Fatal error: ${error.message}`);
  process.exit(1);
});