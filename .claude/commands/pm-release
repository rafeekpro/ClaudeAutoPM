#!/bin/bash
# Prepare ClaudeAutoPM release

echo "🚀 Preparing ClaudeAutoPM Release..."
echo ""

# Use github-operations-specialist for release management
echo "📋 Pre-release Checklist:"

# 1. Validate registry
echo -n "  ├── Registry validation... "
node scripts/self-maintenance.js validate >/dev/null 2>&1 && echo "✅" || echo "❌"

# 2. Run tests
echo -n "  ├── Test suite... "
npm test --silent >/dev/null 2>&1 && echo "✅" || echo "❌"

# 3. Check documentation
echo -n "  ├── Documentation... "
[ -f README.md ] && [ -f PLAYBOOK.md ] && [ -f CHANGELOG.md ] && echo "✅" || echo "❌"

# 4. Installation test
echo -n "  └── Installation test... "
test_dir="/tmp/autopm-release-test-$$"
mkdir -p "$test_dir"
echo "3" | bash install/install.sh "$test_dir" >/dev/null 2>&1
[ -f "$test_dir/CLAUDE.md" ] && echo "✅" || echo "❌"
rm -rf "$test_dir"

echo ""
echo "📦 Version Information:"
current_version=$(grep '"version"' package.json | cut -d'"' -f4)
echo "  Current version: $current_version"

echo ""
echo "🔄 Release Options:"
echo "  1. Patch release (bug fixes)"
echo "  2. Minor release (new features)"
echo "  3. Major release (breaking changes)"
echo "  4. Pre-release (beta/rc)"
echo ""
read -p "Select release type (1-4): " release_type

case $release_type in
    1) npm_version="patch";;
    2) npm_version="minor";;
    3) npm_version="major";;
    4) npm_version="prerelease";;
    *) echo "Invalid selection"; exit 1;;
esac

echo ""
echo "📝 Release Steps:"
echo "  1. Update version: npm version $npm_version"
echo "  2. Update CHANGELOG.md"
echo "  3. Create git tag"
echo "  4. Push to GitHub"
echo "  5. Publish to npm"

echo ""
read -p "Proceed with release? (y/n): " confirm
if [ "$confirm" = "y" ]; then
    echo "🎉 Creating release..."
    npm version "$npm_version"
    echo "✅ Version updated"
    echo ""
    echo "Next steps:"
    echo "  1. Update CHANGELOG.md with release notes"
    echo "  2. git push origin main --tags"
    echo "  3. npm publish"
else
    echo "❌ Release cancelled"
fi