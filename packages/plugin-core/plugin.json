{
  "name": "@claudeautopm/plugin-core",
  "version": "2.0.0",
  "displayName": "Core Framework",
  "description": "Core framework functionality for ClaudeAutoPM",
  "schemaVersion": "2.0",
  "metadata": {
    "category": "Core Framework",
    "author": "ClaudeAutoPM Team",
    "license": "MIT",
    "homepage": "https://github.com/rafeekpro/ClaudeAutoPM",
    "keywords": [
      "core",
      "framework",
      "agents",
      "tdd",
      "context7",
      "automation"
    ],
    "size": "8 KB (gzipped)",
    "required": true
  },
  "agents": [
    {
      "name": "agent-manager",
      "file": "agents/core/agent-manager.md",
      "category": "core",
      "description": "Create, analyze, and manage agents in the registry",
      "version": "1.0.0",
      "tags": ["core", "agents", "management"]
    },
    {
      "name": "code-analyzer",
      "file": "agents/core/code-analyzer.md",
      "category": "core",
      "description": "Analyze code changes for bugs, trace logic flow, investigate issues",
      "version": "1.0.0",
      "tags": ["core", "analysis", "code-quality"]
    },
    {
      "name": "test-runner",
      "file": "agents/core/test-runner.md",
      "category": "core",
      "description": "Run tests and provide comprehensive analysis of results",
      "version": "1.0.0",
      "tags": ["core", "testing", "analysis"]
    },
    {
      "name": "file-analyzer",
      "file": "agents/core/file-analyzer.md",
      "category": "core",
      "description": "Analyze and summarize large files to reduce context usage",
      "version": "1.0.0",
      "tags": ["core", "analysis", "optimization"]
    }
  ],
  "commands": [
    {
      "name": "code-rabbit",
      "file": "commands/code-rabbit.md",
      "description": "Process CodeRabbit review comments with context-aware discretion",
      "category": "core",
      "tags": ["code-review", "automation"]
    },
    {
      "name": "prompt",
      "file": "commands/prompt.md",
      "description": "Handle complex prompts with many @ references",
      "category": "core",
      "tags": ["utility", "framework"]
    },
    {
      "name": "re-init",
      "file": "commands/re-init.md",
      "description": "Reinitialize CLAUDE.md with framework rules",
      "category": "core",
      "tags": ["initialization", "framework"]
    }
  ],
  "rules": [
    {
      "name": "tdd.enforcement",
      "file": "rules/tdd.enforcement.md",
      "priority": "critical",
      "description": "Enforce Test-Driven Development (Red-Green-Refactor)",
      "tags": ["tdd", "testing", "enforcement"]
    },
    {
      "name": "context7-enforcement",
      "file": "rules/context7-enforcement.md",
      "priority": "critical",
      "description": "Enforce Context7 documentation queries before implementation",
      "tags": ["context7", "documentation", "enforcement"]
    },
    {
      "name": "agent-coordination",
      "file": "rules/agent-coordination.md",
      "priority": "high",
      "description": "Agent orchestration patterns and coordination",
      "tags": ["agents", "coordination", "orchestration"]
    },
    {
      "name": "agent-mandatory",
      "file": "rules/agent-mandatory.md",
      "priority": "high",
      "description": "Agent usage requirements and enforcement",
      "tags": ["agents", "enforcement"]
    },
    {
      "name": "framework-path-rules",
      "file": "rules/framework-path-rules.md",
      "priority": "critical",
      "description": "Path convention enforcement (never hardcode autopm/ paths)",
      "tags": ["paths", "conventions", "enforcement"]
    },
    {
      "name": "ai-integration-patterns",
      "file": "rules/ai-integration-patterns.md",
      "priority": "medium",
      "description": "AI integration best practices",
      "tags": ["ai", "patterns"]
    },
    {
      "name": "command-pipelines",
      "file": "rules/command-pipelines.md",
      "priority": "high",
      "description": "Command orchestration and pipelines",
      "tags": ["commands", "pipelines"]
    },
    {
      "name": "context-optimization",
      "file": "rules/context-optimization.md",
      "priority": "medium",
      "description": "Context management and optimization strategies",
      "tags": ["context", "optimization"]
    },
    {
      "name": "datetime",
      "file": "rules/datetime.md",
      "priority": "low",
      "description": "Date and time handling conventions",
      "tags": ["datetime", "utilities"]
    },
    {
      "name": "definition-of-done",
      "file": "rules/definition-of-done.md",
      "priority": "high",
      "description": "Quality standards and completion criteria",
      "tags": ["quality", "standards"]
    },
    {
      "name": "development-environments",
      "file": "rules/development-environments.md",
      "priority": "medium",
      "description": "Development environment setup and configuration",
      "tags": ["environment", "setup"]
    },
    {
      "name": "development-workflow",
      "file": "rules/development-workflow.md",
      "priority": "high",
      "description": "Universal development workflow patterns",
      "tags": ["workflow", "development"]
    },
    {
      "name": "frontmatter-operations",
      "file": "rules/frontmatter-operations.md",
      "priority": "low",
      "description": "Markdown frontmatter parsing and operations",
      "tags": ["frontmatter", "markdown"]
    },
    {
      "name": "git-strategy",
      "file": "rules/git-strategy.md",
      "priority": "high",
      "description": "Git workflow and branching strategy",
      "tags": ["git", "workflow"]
    },
    {
      "name": "golden-rules",
      "file": "rules/golden-rules.md",
      "priority": "critical",
      "description": "Core framework principles and philosophies",
      "tags": ["principles", "framework"]
    },
    {
      "name": "naming-conventions",
      "file": "rules/naming-conventions.md",
      "priority": "medium",
      "description": "Universal naming standards and conventions",
      "tags": ["naming", "conventions"]
    },
    {
      "name": "no-pr-workflow",
      "file": "rules/no-pr-workflow.md",
      "priority": "medium",
      "description": "Alternative git workflow without pull requests",
      "tags": ["git", "workflow"]
    },
    {
      "name": "performance-guidelines",
      "file": "rules/performance-guidelines.md",
      "priority": "medium",
      "description": "Universal performance optimization guidelines",
      "tags": ["performance", "optimization"]
    },
    {
      "name": "pipeline-mandatory",
      "file": "rules/pipeline-mandatory.md",
      "priority": "high",
      "description": "Pipeline enforcement and requirements",
      "tags": ["pipelines", "enforcement"]
    },
    {
      "name": "security-checklist",
      "file": "rules/security-checklist.md",
      "priority": "critical",
      "description": "Universal security standards and checklist",
      "tags": ["security", "checklist"]
    },
    {
      "name": "standard-patterns",
      "file": "rules/standard-patterns.md",
      "priority": "medium",
      "description": "Universal coding patterns and practices",
      "tags": ["patterns", "standards"]
    },
    {
      "name": "strip-frontmatter",
      "file": "rules/strip-frontmatter.md",
      "priority": "low",
      "description": "Frontmatter stripping utility patterns",
      "tags": ["frontmatter", "utilities"]
    },
    {
      "name": "use-ast-grep",
      "file": "rules/use-ast-grep.md",
      "priority": "low",
      "description": "AST parsing utility with ast-grep",
      "tags": ["ast", "parsing", "utilities"]
    }
  ],
  "hooks": [
    {
      "name": "pre-command-context7",
      "file": "hooks/pre-command-context7.js",
      "type": "pre-command",
      "description": "Enforce Context7 queries before command execution",
      "blocking": true,
      "tags": ["context7", "enforcement"]
    },
    {
      "name": "pre-agent-context7",
      "file": "hooks/pre-agent-context7.js",
      "type": "pre-agent",
      "description": "Enforce Context7 queries before agent invocation",
      "blocking": true,
      "tags": ["context7", "enforcement"]
    },
    {
      "name": "enforce-agents",
      "files": [
        "hooks/enforce-agents.js",
        "hooks/enforce-agents.sh"
      ],
      "type": "pre-tool",
      "description": "Enforce agent usage over direct tool calls",
      "blocking": true,
      "dual": true,
      "tags": ["agents", "enforcement"]
    },
    {
      "name": "strict-enforce-agents",
      "file": "hooks/strict-enforce-agents.sh",
      "type": "pre-tool",
      "description": "Stricter agent enforcement (zero tolerance)",
      "blocking": true,
      "tags": ["agents", "enforcement", "strict"]
    },
    {
      "name": "unified-context7-enforcement",
      "file": "hooks/unified-context7-enforcement.sh",
      "type": "wrapper",
      "description": "Unified wrapper for Context7 enforcement",
      "blocking": true,
      "tags": ["context7", "enforcement", "wrapper"]
    },
    {
      "name": "context7-reminder",
      "file": "hooks/context7-reminder.md",
      "type": "documentation",
      "description": "Context7 enforcement reminder text",
      "blocking": false,
      "tags": ["context7", "documentation"]
    },
    {
      "name": "test-hook",
      "file": "hooks/test-hook.sh",
      "type": "testing",
      "description": "Hook testing utility for validation",
      "blocking": false,
      "tags": ["testing", "utilities"]
    }
  ],
  "scripts": [
    {
      "name": "lib/datetime-utils",
      "file": "scripts/lib/datetime-utils.sh",
      "description": "Date and time utilities for scripts",
      "type": "library",
      "exported": true,
      "tags": ["utilities", "datetime"]
    },
    {
      "name": "lib/frontmatter-utils",
      "file": "scripts/lib/frontmatter-utils.sh",
      "description": "Markdown frontmatter parsing utilities",
      "type": "library",
      "exported": true,
      "tags": ["utilities", "frontmatter", "markdown"]
    },
    {
      "name": "lib/github-utils",
      "file": "scripts/lib/github-utils.sh",
      "description": "GitHub API utilities for scripts",
      "type": "library",
      "exported": true,
      "tags": ["utilities", "github", "api"]
    },
    {
      "name": "lib/logging-utils",
      "file": "scripts/lib/logging-utils.sh",
      "description": "Logging utilities for scripts",
      "type": "library",
      "exported": true,
      "tags": ["utilities", "logging"]
    },
    {
      "name": "lib/validation-utils",
      "file": "scripts/lib/validation-utils.sh",
      "description": "Validation utilities for scripts",
      "type": "library",
      "exported": true,
      "tags": ["utilities", "validation"]
    },
    {
      "name": "mcp",
      "subdirectory": "scripts/mcp/",
      "files": [
        "add.sh",
        "enable.sh",
        "disable.sh",
        "list.sh",
        "sync.sh"
      ],
      "description": "MCP server management scripts",
      "type": "utility",
      "tags": ["mcp", "management"]
    }
  ],
  "dependencies": {
    "required": [],
    "optional": []
  },
  "features": {
    "tdd_enforcement": {
      "enabled": true,
      "description": "Enforce Test-Driven Development"
    },
    "context7_enforcement": {
      "enabled": true,
      "description": "Enforce Context7 documentation queries"
    },
    "agent_coordination": {
      "enabled": true,
      "description": "Agent orchestration and coordination"
    },
    "mcp_management": {
      "enabled": true,
      "description": "MCP server management utilities"
    }
  },
  "installation": {
    "message": "Installing core framework functionality...",
    "postInstall": []
  },
  "compatibleWith": ">=3.0.0"
}
