{
  "name": "@claudeautopm/plugin-cloud",
  "version": "2.0.0",
  "schemaVersion": "2.0",
  "displayName": "Cloud Providers & Infrastructure",
  "description": "Complete cloud infrastructure plugin with agents for AWS, Azure, GCP, Kubernetes, Terraform, and infrastructure automation",
  "category": "cloud",
  "metadata": {
    "category": "Cloud Infrastructure",
    "author": "ClaudeAutoPM Team",
    "license": "MIT",
    "homepage": "https://github.com/rafeekpro/ClaudeAutoPM",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/rafeekpro/ClaudeAutoPM.git",
      "directory": "packages/plugin-cloud"
    },
    "size": "~15 KB (gzipped)",
    "required": false,
    "tags": ["cloud", "aws", "azure", "gcp", "kubernetes", "terraform", "infrastructure"]
  },
  "agents": [
    {
      "name": "aws-cloud-architect",
      "file": "agents/aws-cloud-architect.md",
      "category": "cloud",
      "description": "AWS cloud architecture and infrastructure design patterns",
      "version": "2.0.0",
      "tags": ["aws", "cloud", "architecture", "ec2", "s3", "vpc"],
      "mcp": ["aws", "terraform"],
      "context7": [
        "/websites/aws_amazon",
        "/hashicorp/terraform-provider-aws"
      ]
    },
    {
      "name": "azure-cloud-architect",
      "file": "agents/azure-cloud-architect.md",
      "category": "cloud",
      "description": "Azure cloud architecture and resource management",
      "version": "2.0.0",
      "tags": ["azure", "cloud", "architecture", "arm", "bicep"],
      "mcp": ["azure-cli", "terraform"],
      "context7": [
        "/microsoftdocs/azure-docs",
        "/microsoftdocs/architecture-center"
      ]
    },
    {
      "name": "gcp-cloud-architect",
      "file": "agents/gcp-cloud-architect.md",
      "category": "cloud",
      "description": "Google Cloud Platform architecture and design",
      "version": "2.0.0",
      "tags": ["gcp", "google-cloud", "architecture", "compute-engine"],
      "mcp": ["gcp", "terraform"],
      "context7": [
        "/websites/cloud_google_architecture"
      ]
    },
    {
      "name": "gcp-cloud-functions-engineer",
      "file": "agents/gcp-cloud-functions-engineer.md",
      "category": "cloud",
      "description": "Google Cloud Functions and serverless application development",
      "version": "2.0.0",
      "tags": ["gcp", "cloud-functions", "serverless", "functions-as-a-service"],
      "mcp": ["gcp"],
      "context7": [
        "/websites/cloud_google_architecture"
      ]
    },
    {
      "name": "gemini-api-expert",
      "file": "agents/gemini-api-expert.md",
      "category": "ai-integration",
      "description": "Google Gemini API integration and AI application development",
      "version": "2.0.0",
      "tags": ["gemini", "google", "ai", "api", "llm"],
      "mcp": ["gcp"],
      "context7": [
        "/websites/cloud_google_architecture"
      ]
    },
    {
      "name": "kubernetes-orchestrator",
      "file": "agents/kubernetes-orchestrator.md",
      "category": "orchestration",
      "description": "Kubernetes cluster orchestration and container management",
      "version": "2.0.0",
      "tags": ["kubernetes", "k8s", "containers", "orchestration", "helm"],
      "mcp": ["kubernetes"],
      "context7": [
        "/kubernetes/kubernetes"
      ]
    },
    {
      "name": "openai-python-expert",
      "file": "agents/openai-python-expert.md",
      "category": "ai-integration",
      "description": "OpenAI API integration with Python for AI applications",
      "version": "2.0.0",
      "tags": ["openai", "python", "ai", "api", "gpt"],
      "mcp": ["openai"],
      "context7": [
        "/openai/openai-python"
      ]
    },
    {
      "name": "terraform-infrastructure-expert",
      "file": "agents/terraform-infrastructure-expert.md",
      "category": "infrastructure",
      "description": "Terraform infrastructure as code for multi-cloud deployments",
      "version": "2.0.0",
      "tags": ["terraform", "iac", "infrastructure", "multi-cloud", "hcl"],
      "mcp": ["terraform"],
      "context7": [
        "/hashicorp/terraform",
        "/hashicorp/terraform-provider-aws"
      ]
    }
  ],
  "commands": [
    {
      "name": "infra-deploy",
      "file": "commands/infra-deploy.md",
      "description": "Deploy infrastructure to cloud providers using IaC",
      "category": "deployment",
      "tags": ["infrastructure", "deployment", "terraform", "cloud"],
      "requiredAgents": ["terraform-infrastructure-expert"],
      "context7": [
        "/hashicorp/terraform"
      ]
    },
    {
      "name": "ssh-security",
      "file": "commands/ssh-security.md",
      "description": "Configure SSH security hardening for cloud instances",
      "category": "security",
      "tags": ["ssh", "security", "hardening", "infrastructure"],
      "context7": [
        "/websites/aws_amazon"
      ]
    },
    {
      "name": "traefik-setup",
      "file": "commands/traefik-setup.md",
      "description": "Setup Traefik reverse proxy for cloud infrastructure",
      "category": "networking",
      "tags": ["traefik", "proxy", "networking", "load-balancer"],
      "requiredAgents": ["kubernetes-orchestrator"],
      "context7": [
        "/traefik/traefik"
      ]
    },
    {
      "name": "k8s-deploy",
      "file": "commands/k8s-deploy.md",
      "description": "Deploy applications to Kubernetes clusters",
      "category": "deployment",
      "tags": ["kubernetes", "k8s", "deployment", "containers"],
      "requiredAgents": ["kubernetes-orchestrator"],
      "context7": [
        "/kubernetes/kubernetes"
      ]
    },
    {
      "name": "cloud-validate",
      "file": "commands/cloud-validate.md",
      "description": "Validate cloud infrastructure configuration and credentials",
      "category": "validation",
      "tags": ["cloud", "validation", "security", "credentials", "terraform"],
      "requiredAgents": ["aws-cloud-architect", "azure-cloud-architect", "gcp-cloud-architect", "terraform-infrastructure-expert"],
      "context7": [
        "/aws/aws-cdk",
        "/hashicorp/terraform",
        "/docker/docs",
        "/kubernetes/kubernetes"
      ]
    },
    {
      "name": "cloud-cost-optimize",
      "file": "commands/cloud-cost-optimize.md",
      "description": "Analyze and optimize cloud infrastructure costs",
      "category": "cost-optimization",
      "tags": ["cloud", "cost", "optimization", "finops", "savings"],
      "requiredAgents": ["aws-cloud-architect", "azure-cloud-architect", "gcp-cloud-architect"],
      "context7": [
        "/aws/aws-cdk",
        "/hashicorp/terraform"
      ]
    }
  ],
  "rules": [
    {
      "name": "infrastructure-pipeline",
      "file": "rules/infrastructure-pipeline.md",
      "priority": "high",
      "description": "Infrastructure deployment pipeline standards and validation",
      "tags": ["infrastructure", "pipeline", "terraform", "docker", "kubernetes"],
      "appliesTo": ["commands", "agents"],
      "enforcesOn": ["terraform-infrastructure-expert", "kubernetes-orchestrator"]
    },
    {
      "name": "cloud-security-compliance",
      "file": "rules/cloud-security-compliance.md",
      "priority": "critical",
      "description": "Cloud security best practices and compliance standards enforcement",
      "tags": ["security", "compliance", "cloud", "encryption", "access-control"],
      "appliesTo": ["commands", "agents", "deployments"],
      "enforcesOn": ["aws-cloud-architect", "azure-cloud-architect", "gcp-cloud-architect", "terraform-infrastructure-expert", "kubernetes-orchestrator"]
    }
  ],
  "hooks": [
    {
      "name": "pre-cloud-deploy",
      "file": "hooks/pre-cloud-deploy.js",
      "type": "pre-command",
      "description": "Security validation before cloud infrastructure deployment",
      "blocking": true,
      "tags": ["security", "validation", "deployment", "terraform"],
      "triggers": ["cloud:deploy", "infra-deploy", "k8s-deploy", "terraform-deploy"]
    }
  ],
  "scripts": [
    {
      "name": "terraform-init",
      "file": "scripts/examples/terraform-init.sh",
      "description": "Terraform initialization and validation example",
      "type": "example",
      "executable": true,
      "category": "terraform",
      "tags": ["terraform", "init", "validation"]
    },
    {
      "name": "aws-validate",
      "file": "scripts/examples/aws-validate.sh",
      "description": "AWS environment validation and credential check",
      "type": "example",
      "executable": true,
      "category": "aws",
      "tags": ["aws", "validation", "credentials"]
    },
    {
      "name": "azure-setup",
      "file": "scripts/examples/azure-setup.sh",
      "description": "Azure environment setup and configuration",
      "type": "example",
      "executable": true,
      "category": "azure",
      "tags": ["azure", "setup", "configuration"]
    },
    {
      "name": "gcp-setup",
      "file": "scripts/examples/gcp-setup.sh",
      "description": "Google Cloud Platform environment setup",
      "type": "example",
      "executable": true,
      "category": "gcp",
      "tags": ["gcp", "setup", "configuration"]
    },
    {
      "name": "k8s-validate",
      "file": "scripts/examples/k8s-validate.sh",
      "description": "Kubernetes cluster validation and health check",
      "type": "example",
      "executable": true,
      "category": "kubernetes",
      "tags": ["kubernetes", "k8s", "validation", "health-check"]
    }
  ],
  "features": {
    "multi_cloud": {
      "enabled": true,
      "description": "Support for AWS, Azure, and GCP cloud providers"
    },
    "infrastructure_as_code": {
      "enabled": true,
      "description": "Terraform-based infrastructure automation"
    },
    "kubernetes_orchestration": {
      "enabled": true,
      "description": "Kubernetes cluster management and deployment"
    },
    "serverless": {
      "enabled": true,
      "description": "Cloud Functions and serverless architectures"
    },
    "ai_integration": {
      "enabled": true,
      "description": "AI API integrations (OpenAI, Gemini)"
    },
    "security_hardening": {
      "enabled": true,
      "description": "SSH and infrastructure security best practices"
    },
    "networking": {
      "enabled": true,
      "description": "Load balancing, proxies, and network configuration"
    }
  },
  "dependencies": [],
  "peerPlugins": [
    "@claudeautopm/plugin-core"
  ],
  "mcpServers": {
    "recommended": [
      "aws",
      "azure-cli",
      "gcp",
      "terraform",
      "kubernetes"
    ],
    "optional": [
      "openai"
    ]
  },
  "keywords": [
    "claudeautopm",
    "plugin",
    "cloud",
    "aws",
    "azure",
    "gcp",
    "google-cloud",
    "kubernetes",
    "k8s",
    "terraform",
    "infrastructure",
    "iac",
    "serverless",
    "devops",
    "architecture",
    "containers",
    "orchestration"
  ],
  "compatibleWith": ">=3.0.0"
}
