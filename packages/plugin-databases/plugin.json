{
  "name": "@claudeautopm/plugin-databases",
  "version": "2.0.0",
  "schemaVersion": "2.0",
  "displayName": "Database & Data Storage",
  "description": "Complete database plugin with PostgreSQL, MongoDB, Redis, BigQuery, and Cosmos DB experts, database rules, and optimization scripts",
  "category": "databases",
  "metadata": {
    "category": "Databases & Data Storage",
    "author": "ClaudeAutoPM Team",
    "license": "MIT",
    "homepage": "https://github.com/rafeekpro/ClaudeAutoPM",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/rafeekpro/ClaudeAutoPM.git",
      "directory": "packages/plugin-databases"
    },
    "size": "~20 KB (gzipped)",
    "required": false,
    "tags": ["databases", "sql", "nosql", "postgresql", "mongodb", "redis", "bigquery", "cosmosdb", "data-warehouse", "caching"]
  },
  "commands": [
    {
      "name": "db-optimize",
      "file": "commands/db-optimize.md",
      "description": "Optimize database performance for PostgreSQL, MongoDB, and Redis",
      "category": "optimization",
      "tags": ["database", "optimization", "performance", "indexing", "postgresql", "mongodb", "redis"],
      "requiredAgents": ["postgresql-expert", "mongodb-expert", "redis-expert"],
      "context7": [
        "/websites/postgresql",
        "/mongodb/mongo",
        "/redis/redis-py"
      ]
    }
  ],
  "agents": [
    {
      "name": "postgresql-expert",
      "file": "agents/postgresql-expert.md",
      "category": "databases",
      "description": "PostgreSQL database design, optimization, and management. Expert in SQL queries, indexing strategies, performance tuning, replication, partitioning, and advanced features like JSONB and full-text search.",
      "version": "2.0.0",
      "tags": ["postgresql", "sql", "database", "indexing", "performance", "replication"],
      "mcp": ["postgresql"],
      "context7": [
        "/websites/postgresql",
        "/websites/postgresql-current",
        "/porsager/postgres"
      ]
    },
    {
      "name": "mongodb-expert",
      "file": "agents/mongodb-expert.md",
      "category": "databases",
      "description": "MongoDB database design, aggregation pipelines, and performance optimization. Expert in document modeling, sharding, replication, indexing strategies, and MongoDB Atlas.",
      "version": "2.0.0",
      "tags": ["mongodb", "nosql", "document-db", "aggregation", "sharding", "atlas"],
      "mcp": ["mongodb"],
      "context7": [
        "/mongodb/docs",
        "/mongodb/mongo",
        "/automattic/mongoose",
        "/mongodb/node-mongodb-native"
      ]
    },
    {
      "name": "redis-expert",
      "file": "agents/redis-expert.md",
      "category": "caching",
      "description": "Redis caching, pub/sub messaging, and data structure operations. Expert in Redis Cluster, persistence strategies, Lua scripting, and performance optimization.",
      "version": "2.0.0",
      "tags": ["redis", "caching", "pub-sub", "in-memory", "data-structures", "performance"],
      "mcp": ["redis"],
      "context7": [
        "/websites/redis_io",
        "/redis/node-redis",
        "/redis/go-redis"
      ]
    },
    {
      "name": "bigquery-expert",
      "file": "agents/bigquery-expert.md",
      "category": "data-warehouse",
      "description": "BigQuery data warehouse design, SQL optimization, and analytics engineering. Expert in partitioning, clustering, materialized views, BigQuery ML, and cost optimization.",
      "version": "2.0.0",
      "tags": ["bigquery", "data-warehouse", "analytics", "sql", "gcp", "ml", "cost-optimization"],
      "mcp": [],
      "context7": [
        "/websites/cloud_google-bigquery",
        "/googleapis/python-bigquery",
        "/googleapis/nodejs-bigquery"
      ]
    },
    {
      "name": "cosmosdb-expert",
      "file": "agents/cosmosdb-expert.md",
      "category": "databases",
      "description": "Azure Cosmos DB design and optimization across all APIs (Core SQL, MongoDB, Cassandra, Gremlin, Table). Expert in global distribution, consistency levels, partitioning strategies, and cost optimization.",
      "version": "2.0.0",
      "tags": ["cosmosdb", "azure", "nosql", "multi-model", "global-distribution", "consistency"],
      "mcp": [],
      "context7": [
        "/websites/learn_microsoft-en-us-azure-cosmos-db",
        "/microsoftdocs/azure-docs"
      ]
    }
  ],
  "rules": [
    {
      "name": "database-management-strategy",
      "file": "rules/database-management-strategy.md",
      "priority": "high",
      "description": "Required strategy for managing databases across all project environments with Context7-verified best practices",
      "tags": ["database", "strategy", "environments", "best-practices", "postgresql", "mongodb", "redis", "bigquery", "cosmosdb"],
      "appliesTo": ["commands", "agents"],
      "enforcesOn": ["postgresql-expert", "mongodb-expert", "redis-expert", "bigquery-expert", "cosmosdb-expert"]
    },
    {
      "name": "database-pipeline",
      "file": "rules/database-pipeline.md",
      "priority": "high",
      "description": "Critical database operations pipelines for migrations, optimization, data warehousing, caching, and backups",
      "tags": ["database", "pipeline", "migrations", "optimization", "backup", "caching", "data-warehouse"],
      "appliesTo": ["commands", "agents"],
      "enforcesOn": ["postgresql-expert", "mongodb-expert", "redis-expert", "bigquery-expert", "cosmosdb-expert"]
    }
  ],
  "scripts": [
    {
      "name": "postgres-index-analyze",
      "file": "scripts/examples/postgres-index-analyze.sh",
      "description": "Analyze PostgreSQL indexes for unused indexes, hit ratio, and missing foreign key indexes",
      "type": "example",
      "executable": true,
      "category": "postgresql",
      "tags": ["postgresql", "indexing", "performance", "analysis"]
    },
    {
      "name": "mongodb-shard-check",
      "file": "scripts/examples/mongodb-shard-check.sh",
      "description": "Check MongoDB sharded collection index consistency across all shards",
      "type": "example",
      "executable": true,
      "category": "mongodb",
      "tags": ["mongodb", "sharding", "indexing", "consistency"]
    },
    {
      "name": "redis-cache-stats",
      "file": "scripts/examples/redis-cache-stats.sh",
      "description": "Analyze Redis cache performance including hit/miss ratio, memory usage, and slow log",
      "type": "example",
      "executable": true,
      "category": "redis",
      "tags": ["redis", "caching", "performance", "monitoring"]
    },
    {
      "name": "bigquery-cost-analyze",
      "file": "scripts/examples/bigquery-cost-analyze.sh",
      "description": "Analyze BigQuery costs and optimization opportunities including storage and partitioning",
      "type": "example",
      "executable": true,
      "category": "bigquery",
      "tags": ["bigquery", "cost-optimization", "partitioning", "clustering"]
    },
    {
      "name": "cosmosdb-ru-optimize",
      "file": "scripts/examples/cosmosdb-ru-optimize.sh",
      "description": "Analyze Azure Cosmos DB RU/s optimization and partition distribution",
      "type": "example",
      "executable": true,
      "category": "cosmosdb",
      "tags": ["cosmosdb", "ru-optimization", "partitioning", "cost"]
    }
  ],
  "features": {
    "postgresql_database": {
      "enabled": true,
      "description": "PostgreSQL relational database with advanced features"
    },
    "mongodb_database": {
      "enabled": true,
      "description": "MongoDB document database with sharding and aggregation"
    },
    "redis_caching": {
      "enabled": true,
      "description": "Redis in-memory caching and pub/sub messaging"
    },
    "bigquery_warehouse": {
      "enabled": true,
      "description": "BigQuery data warehouse with ML and analytics"
    },
    "cosmosdb_database": {
      "enabled": true,
      "description": "Azure Cosmos DB multi-model globally distributed database"
    },
    "database_optimization": {
      "enabled": true,
      "description": "Query optimization, indexing, and performance tuning"
    },
    "cost_optimization": {
      "enabled": true,
      "description": "Database cost analysis and optimization strategies"
    }
  },
  "dependencies": [],
  "peerPlugins": [
    "@claudeautopm/plugin-core"
  ],
  "mcpServers": {
    "recommended": [
      "postgresql",
      "mongodb",
      "redis"
    ],
    "optional": [
      "azure-cli",
      "gcp"
    ]
  },
  "keywords": [
    "claudeautopm",
    "plugin",
    "databases",
    "postgresql",
    "mongodb",
    "redis",
    "bigquery",
    "cosmosdb",
    "sql",
    "nosql",
    "data-warehouse",
    "caching",
    "optimization"
  ],
  "compatibleWith": ">=3.0.0"
}
