name: Comprehensive Test Suite

on:
  push:
    branches: [main, develop, 'test/**', 'feature/**']
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-${{ matrix.node-version }}
          path: test/test-report.json

  integration-tests:
    name: Integration Tests - Azure DevOps
    runs-on: ubuntu-latest
    env:
      AZURE_DEVOPS_ORG: test-org
      AZURE_DEVOPS_PROJECT: test-project
      AZURE_DEVOPS_PAT: test-token

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Azure DevOps integration tests
        run: npm run test:azure

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: azure-integration-test-results
          path: test/test-report.json

  e2e-tests:
    name: End-to-End Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        # Windows tests are experimental.
        # TODO: Make Windows E2E tests non-experimental after resolving:
        #   - Flaky test failures on Windows CI
        #   - Path handling inconsistencies in E2E scripts
        #   - Ensure all dependencies are compatible with Windows runners
        # Windows E2E tests are now run in a separate workflow to avoid CI instability.

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests
        run: npm run test:e2e
        continue-on-error: ${{ matrix.experimental == true }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ matrix.os }}
          path: test/test-report.json

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security tests
        run: npm run test:security

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-test-results
          path: test/test-report.json

  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run regression tests
        run: npm run test:regression

      - name: Upload regression test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-results
          path: |
            test/test-report.json
            test/regression/__snapshots__/**
          if-no-files-found: warn  # Warn instead of fail if snapshots don't exist

  comprehensive-suite:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, security-tests, regression-tests]
    if: always()

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts

      - name: Run comprehensive test suite
        run: npm run test:comprehensive

      - name: Generate test coverage report
        run: |
          echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f test/test-report.json ]; then
            node -e "
              const report = require('./test/test-report.json');
              console.log('- Total Tests: ' + report.summary.totalTests);
              console.log('- Passed: ' + report.summary.passedTests);
              console.log('- Failed: ' + report.summary.failedTests);
              console.log('- Success Rate: ' + report.summary.successRate + '%');
            " >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload comprehensive report
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-test-report
          path: test/test-report.json

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'test/test-report.json';

            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              const emoji = report.summary.passed ? '✅' : '❌';
              const status = report.summary.passed ? 'PASSED' : 'FAILED';

              const comment = `## ${emoji} Test Results: ${status}

              ### Summary
              - **Total Tests:** ${report.summary.totalTests}
              - **Passed:** ${report.summary.passedTests}
              - **Failed:** ${report.summary.failedTests}
              - **Skipped:** ${report.summary.skippedTests}
              - **Success Rate:** ${report.summary.successRate}%

              ### Test Suites
              ${report.results.map(r =>
                `- ${r.passed ? '✅' : '❌'} **${r.suite}**: ${r.passed ? 'PASSED' : 'FAILED'} (${r.duration || 'N/A'})`
              ).join('\n')}

              _Generated at: ${report.timestamp}_`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: true

      - name: Check for TODO comments
        run: |
          echo "## TODO Comments Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          grep -r "TODO\|FIXME\|HACK" --include="*.js" --include="*.md" . || echo "No TODO comments found" >> $GITHUB_STEP_SUMMARY

      - name: Check test coverage trends
        run: |
          echo "## Test Coverage Trends" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- New tests added in this PR" >> $GITHUB_STEP_SUMMARY
          git diff --name-only origin/main...HEAD | grep -E "\.test\.(js|ts)" | wc -l | xargs -I {} echo "- Test files modified: {}" >> $GITHUB_STEP_SUMMARY