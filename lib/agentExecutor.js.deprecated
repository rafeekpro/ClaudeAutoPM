/**
 * Agent Executor Module
 * Handles execution of AI agents with prompts
 */

const fs = require('fs-extra');
const path = require('path');
const { spawn } = require('child_process');
const colors = require('./utils/colors');

class AgentExecutor {
  constructor() {
    this.agentsPath = path.join(__dirname, '../autopm/.claude/agents');
  }

  /**
   * Execute an agent with the given prompt
   * @param {string} agentType - The type of agent to execute
   * @param {string} prompt - The prompt to send to the agent
   * @param {Object} context - Additional context for the agent
   * @returns {Promise<Object>} The result of the agent execution
   */
  async run(agentType, prompt, context = {}) {
    console.log(colors.blue(`ü§ñ Preparing ${agentType} agent...`));

    try {
      // Replace $ARGUMENTS in prompt with actual arguments
      let finalPrompt = prompt;
      if (context.arguments) {
        finalPrompt = prompt.replace(/\$ARGUMENTS/g, context.arguments);
      }

      // Check if we're in Claude Code environment
      const isClaudeCode = process.env.CLAUDE_CODE === 'true' ||
                          process.env.ANTHROPIC_WORKSPACE === 'true';

      if (isClaudeCode) {
        // If in Claude Code, use the Task tool
        console.log(colors.cyan('üìã Executing via Claude Code Task tool...'));
        console.log(colors.gray('Prompt:'), finalPrompt.substring(0, 200) + '...');

        // Claude Code should handle this through its Task tool
        // This would be invoked by Claude when running the command
        return {
          status: 'success',
          agent: agentType,
          message: 'Agent should be executed via Claude Code Task tool',
          prompt: finalPrompt,
          context: context
        };
      }

      // Not in Claude Code - show instructions
      console.log();
      console.log(colors.yellow('‚ö†Ô∏è  This command requires Claude Code'));
      console.log();
      console.log(colors.cyan('To use AI-powered commands:'));
      console.log();
      console.log(colors.green('1. Open your project in Claude Code'));
      console.log(colors.gray('2. Run commands directly in chat:'));
      console.log(colors.gray(`   /pm:prd-new ${context.arguments || 'feature-name'}`));
      console.log();
      console.log(colors.blue('Why Claude Code?'));
      console.log(colors.gray('‚Ä¢ Interactive brainstorming sessions'));
      console.log(colors.gray('‚Ä¢ Intelligent context understanding'));
      console.log(colors.gray('‚Ä¢ Real-time Q&A during PRD creation'));
      console.log();
      console.log(colors.cyan('üìù What this command would do:'));
      console.log(colors.gray('‚îÄ'.repeat(60)));

      // Show a summary of the command intent
      if (agentType === 'pm-specialist' && context.arguments) {
        console.log(colors.white(`Create PRD for: ${context.arguments}`));
        console.log();
        console.log('The AI agent would:');
        console.log('1. Ask clarifying questions about the feature');
        console.log('2. Help define user stories and requirements');
        console.log('3. Generate comprehensive PRD document');
        console.log(`4. Save to: .claude/prds/${context.arguments}.md`);
      } else {
        console.log(finalPrompt.substring(0, 300) + '...');
      }
      console.log(colors.gray('‚îÄ'.repeat(60)));

      return {
        status: 'claude-required',
        agent: agentType,
        message: 'Claude Code required for AI-powered commands',
        prompt: finalPrompt,
        context: context
      };

    } catch (error) {
      console.error(colors.red(`‚ùå Agent execution failed: ${error.message}`));
      throw error;
    }
  }

}

module.exports = new AgentExecutor();